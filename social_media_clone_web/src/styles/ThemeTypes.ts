type ColorType = {
  100: string,
  200: string,
  300: string,
  400: string,
  500: string,
  600: string,
  700: string,
  800: string,
  900: string,
}

type TypographyType = {
  fontFamily: string,
  fontWeight: number,
  fontSize: string,
  textTransform?: 'none'|'capitalize'|'uppercase'|'lowercase'|'initial'|'inherit',
}

export interface ThemeProps {
  breakpoints: {
    xs: number,
    sm: number,
    md: number,
    lg: number,
    xl: number,
  },
  colors: {
    common: {
      black: string,
      white: string,
      paper: string,
      background: string,
      text: string,
    },
    primary: ColorType,
    secondary: ColorType,
    tertiary: ColorType,
    grey: ColorType,
    warning: ColorType,
    caution: ColorType,
    note: ColorType,
    success: ColorType,
    getContrastText: (hexInput: string) => string
  },
  spacing: (value: number) => string,
  shadows: {
    text: {
      100: string,
      200: string,
      300: string,
      400: string,
      500: string,
      600: string,
      700: string,
      800: string,
      900: string,
    },
    box: {
      100: string,
      200: string,
      300: string,
      400: string,
      500: string,
      600: string,
      700: string,
      800: string,
      900: string,
    },
  },
  typography: {
    htmlFontSize: number,
    fontFamily: string,
    fontSize: number,
    fontWeightLight: number,
    fontWeightRegular: number,
    fontWeightMedium: number,
    fontWeightBold: number,
    h1: TypographyType,
    h2: TypographyType,
    h3: TypographyType,
    h4: TypographyType,
    h5: TypographyType,
    h6: TypographyType,
    subtitle1: TypographyType,
    subtitle2: TypographyType,
    body1: TypographyType,
    body2: TypographyType,
    button: TypographyType,
    caption: TypographyType,
  },
  zIndex: {
    appBar: number,
    drawer: number,
    modal: number,
    snackbar: number,
    tooltip: number,
  }
}
